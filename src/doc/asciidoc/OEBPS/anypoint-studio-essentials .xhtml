<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xml:lang="en" lang="en">
<head>
<meta charset="UTF-8"/>
<title>Anypoint Studio Essentials </title>
<link rel="stylesheet" type="text/css" href="styles/epub3.css"/>
<link rel="stylesheet" type="text/css" href="styles/epub3-css3-only.css" media="(min-device-width: 0px)"/>
<script type="text/javascript">
document.addEventListener('DOMContentLoaded', function(event) {
  var epubReader = navigator.epubReadingSystem;
  if (!epubReader) {
    if (window.parent == window || !(epubReader = window.parent.navigator.epubReadingSystem)) {
      return;
    }
  }
  document.body.setAttribute('class', epubReader.name.toLowerCase().replace(/ /g, '-'));
});
</script>
</head>
<body>
<section class="chapter" title="Anypoint Studio Essentials " epub:type="chapter" id="anypoint-studio-essentials ">
<header>
<div class="chapter-header">
<p class="byline"><img src="images/avatars/default.jpg"/> <b class="author">MuleSoft Inc.</b></p>
<h1 class="chapter-title"> <small class="subtitle"><b>ANYPOINT</b> <b>STUDIO</b> <b>ESSENTIALS </b></small></h1>
</div>
</header>
<p>An Eclipse-based, integration development environment Anypoint™ Studio
offers two development environments you can use to create applications:</p>
<div class="ordered-list arabic">
<ol class="arabic">
<li>
<span class="principal">a Visual Editor</span>
</li>
<li>
<span class="principal">an XML Editor</span>
</li>
</ol>
</div>
<p>Whatever you develop or configure in one editor is reflected in the
other. This real-time reflection of changes is referred to as <strong>two-way
editing</strong>﻿. Same app, different editor.</p>
<p><img src="images/2-way_editing.png" alt="image"/></p>
<section class="sect2" title="The Visual Editor">
<h3 id="_the_visual_editor">The Visual Editor</h3>
<p>Studio&#8217;s visual editor is divided into five parts:</p>
<div class="ordered-list arabic">
<ol class="arabic">
<li>
<span class="principal">Package Explorer</span>
</li>
<li>
<span class="principal">Canvas</span>
</li>
<li>
<span class="principal">Palette</span>
</li>
<li>
<span class="principal">Connection Explorer</span>
</li>
<li>
<span class="principal">Console</span>
</li>
</ol>
</div>
<p><img src="images/StudioAreas.png" alt="image"/></p>
<p>The <strong>Package Explorer</strong>﻿ displays project folders and files in a tree
format. Click to expand or contract Mule project folders and examine the
files that make up a Mule project.</p>
<p>The <strong>Canvas</strong>﻿ provides a space for arranging pre-packaged building blocks
into Mule applications. The <strong>Palette</strong>﻿, on the right edge of the canvas,
displays a list of building blocks that you can drag and drop onto the
canvas to build your application. At the base of the canvas, Studio
offers three tabs which offer different ways to interface with your
application:</p>
<p><img src="images/3tabs-2.png" alt="image"/></p>
<div class="itemized-list">
<ul>
<li>
<span class="principal"><strong>Message Flow</strong>﻿: the drag-and-drop interface in which you arrange
building blocks to form an application</span>
</li>
<li>
<span class="principal"><strong>Global Elements</strong>﻿: the interface for creating or editing reusable
configurations for Mule building blocks</span>
</li>
<li>
<span class="principal"><strong>Configuration XML</strong>﻿: the XML editor interface displays the XML
elements that correspond to the building blocks arranged on the Message
flow canvas</span>
</li>
</ul>
</div>
<p>The <strong>Connection Explorer</strong>﻿ displays a list of any global connector
configurations defined in your application for quick access to your
configuration details. Behind this tab, a second tab contains an
<strong>outline</strong>﻿, which displays a miniaturized overview of the whole canvas,
along with a box cursor that scrolls with the display in the canvas
pane. This provides a high-level, bird&#8217;s-eye view of your complete Mule
application as it extends beyond the borders of the canvas.</p>
<p>The <strong>Console</strong>﻿ area below the canvas contains the console for the
embedded Mule server, which displays a list of events and problems (if
any) that Studio reports as you create or run your Mule application. In
the console area, you also have a <strong>properties editor</strong>﻿. The propertied
editor tab is labeled with the name of the building block that is
currently selected on your canvas, or with "Mule Properties View" when
no building block is selected. The properties editor includes the
<strong>DataSense Explorer</strong>﻿, which supplies real-time information about the
data structure of your payload and any available inbound and outbound
properties or variables. See an example of the properties editor
below.</p>
</section>
<section class="sect2" title="The XML Editor ">
<h3 id="_the_xml_editor">The XML Editor </h3>
<p>Because Anypoint Studio leverages Eclipse, the Configuration XML editor
incorporates many Eclipse features. The following is a list of handy
tips and tricks for using Studio&#8217;s XML editor.</p>
<div class="ordered-list arabic">
<h3>Show Attribute Options</h3>
<ol class="arabic">
<li>
<span class="principal">Double click to select an attribute of an element, such as
the <code class="literal">host</code>﻿ attribute of the <code class="literal">HTTP endpoint</code>﻿ element.</span>
</li>
<li>
<span class="principal">Press <strong>Ctrl</strong>﻿+<strong>space bar</strong>﻿ to open a list of suggested attributes you
can configure for the element (see below).</span>
</li>
<li>
<span class="principal">Use the up and down scroll arrows to browse through the suggestions.</span>
</li>
<li>
<span class="principal">When you have highlighted the attribute you wish to use, press enter
to insert it into the XML configuration. <br/>
<br/>
<img src="images/attribute.png" alt="image"/></span>
</li>
</ol>
</div>
<div class="ordered-list arabic">
<h3>Suggest Elements</h3>
<ol class="arabic">
<li>
<span class="principal">Enter an element&#8217;s left angle bracket ( &lt; ), then
press <strong>Ctrl</strong>﻿+<strong>space bar</strong>﻿.</span>
</li>
<li>
<span class="principal">Recognizing that you are entering a new element, Studio lists all
possible element for that particular situation.</span>
</li>
<li>
<span class="principal">Use the up and down scroll arrows to browse through the suggestions.</span>
</li>
<li>
<span class="principal">When you have highlighted the element you wish to use, press enter
to insert it into the XML configuration.</span>
</li>
</ol>
</div>
</section>
<section class="sect2" title="Building Applications in Studio">
<h3 id="_building_applications_in_studio">Building Applications in Studio</h3>
<p>Use Anypoint Studio to arrange <em>*building blocks*</em>﻿ on the canvas to
create <em>*flows*</em>﻿ which, together, form an <em>*application*</em>﻿ to process
<em>*messages*</em>﻿.</p>
<p>Confused? Let&#8217;s break it down.</p>
<p><strong class="head">Building Blocks.</strong> A building block is a pre-packaged unit of business logic that comes
bundled with Mule. As the name implies, it is a block (a block of code,
really) that you can arrange with other blocks to form a structure. In
this case, you are arranging building blocks to form a Mule flow.</p>
<p>Building blocks fall into one of two categories depending on their
function within a Mule flow:</p>
<div class="table">
<div class="content">
<table class="table table-framed-topbot table-grid-rows" style="width: 100%;">
<colgroup>
<col/>
<col/>
<col/>
</colgroup>
<thead>
<tr>
<th>Type</th>
<th>Function</th>
<th>Examples</th>
</tr>
</thead>
<tbody>
<tr>
<td><p><strong>Message Sources</strong>﻿</p></td>
<td><p>Message sources accept messages into flows from other sources or services. A message source always falls at the beginning of a flow and is almost always Anypoint™ Connector.</p></td>
<td><p>HTTP Connector, Ajax Connector, Salesforce Connector</p></td>
</tr>
<tr>
<td><p><strong>Message Processors</strong>﻿</p></td>
<td><p>Message processors filter, alter, route, or validate messages.</p></td>
<td><p>Payload Filter, Choice Router, Email to String Transformer</p></td>
</tr>
</tbody>
</table>
</div>
</div>
<p>To arrange building blocks to form a flow, simply drag and drop them
from the palette onto the canvas.</p>
<p><img src="images/draganddrop.png" alt="image"/></p>
<p>After you have arranged building blocks into a flow, you must configure
each building block individually. Click the building block to open its
<strong>Properties</strong>﻿ <strong>Editor</strong>﻿ in the console, then supply the values for the
configuration fields (see image below).</p>
<p><img src="images/propertyeditorexample.png" alt="image"/></p>
<p>Note that the <strong>DataSense Explorer</strong>﻿ at the right side of the properties
editor provides helpful information about the data structure and
metadata of your message as it enters and exits this particular building
block. You can toggle the DataSense Explorer on and off by clicking this
icon: </p>
<p><img src="images/datasenseexplorericon.png" alt="image"/></p>
<p>Anypoint Studio also supports auto-complete in any message processor
configuration fields that support expressions. To open auto-complete,
place your cursor in the field and press <strong>CTRL + spacebar</strong>﻿.</p>
<p><img src="images/auto_complete.png" alt="image"/></p>
<p class="last">Find out more about using expressions to access and manipulate the Mule
message in the
<a href="Mule+Message+Tutorial.asciidoc" class="link">Mule Message
Tutorial</a>﻿.</p>
</section>
</section>
</body>
</html>